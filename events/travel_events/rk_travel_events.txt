namespace = rk_travel_events

rk_travel_events.2000 = {
	type = character_event
	title = rk_travel_events.2000.t
	desc = {
		desc = rk_travel_events.2000.desc

	}
	theme = travel
	left_portrait = {
		character = root
		animation = disbelief
	}
	right_portrait = {
		character = scope:local_character
		animation = marshal
	}
	trigger = {
		# static_group_filter = {
		#  	group = rk_travel_events.2000
		#  	match = 0.25
		# }
		is_available_travelling = yes
		is_playable_character = yes
		is_location_valid_for_travel_event_on_land = yes
		any_pool_character = {
			province = root.location
			is_available_healthy_ai_adult = yes
			OR = {
				AND = {
					is_landless_adventurer = yes
					has_trait_xp = {
						trait = lifestyle_traveler 
						track = travel 
						value >= 50
					}
				}
				AND = {
					has_trait = lifestyle_traveler
					has_trait = ambitious
				}
			}
			opinion = {
				value >= 20
				target = root
			}
		}
		NOR = {
			any_character_artifact = { has_variable = dramenwood }
			has_character_flag = no_zanaris 
			has_character_flag = find_zanaris
		}
		
		
	}

	immediate = {
		random_pool_character = {
			province = root.location
			limit = {
				is_available_healthy_ai_adult = yes
				OR = {
					AND = {
						is_landless_adventurer = yes
						has_trait_xp = {
							trait = lifestyle_traveler 
							track = travel 
							value >= 50
						}
					}
					AND = {
						has_trait = lifestyle_traveler
						has_trait = ambitious
					}
				}
				opinion = {
					value >= 20
					target = root
				}
			}
			save_scope_as = local_character
		}
	}

	#Search for Zanaris
	option = { 
		name = rk_travel_events.2000.a
		add_character_flag = find_zanaris
		stress_impact = {
			craven = miniscule_stress_impact_gain
			lazy = miniscule_stress_impact_gain
			paranoid = medium_stress_impact_gain
		}

		custom_tooltip = {
			text = travel_to_entrana_tt

			start_travel_plan = { 
				destination = province:8
				return_trip = yes
				on_arrival_event = rk_travel_events.2005
				on_travel_planner_cancel_event = rk_travel_events.2004
			}
		}

		#Resets homage/petition timers if you already did them - NEEDS FIXED
		if = { 
			limit = {
				OR = {
					has_variable = homage_liege_scope
					has_variable = pay_homage_grace
					has_character_flag = meditation_character_flag
					has_character_flag = petition_liege_character_flag
					has_character_flag = holding_court_character_flag
					has_character_flag = being_visited_on_tour
				}
			}
			remove_variable = homage_liege_scope
			remove_variable = pay_homage_grace
			remove_character_flag = meditation_character_flag
			remove_character_flag = petition_liege_character_flag
			remove_character_flag = holding_court_character_flag
			remove_character_flag = being_visited_on_tour
		}
		

		ai_chance = {
			base = 100
			modifier = {
				OR = {
					has_trait = ambitious
					has_trait = eccentric
				}
				add = 50
			}
			
			ai_value_modifier = {
				ai_energy = 2
				ai_boldness = 2
				ai_compassion = 1	
				ai_rationality = -1	
			}
		}
	}

	#Don't care about fairies
	option = { 
		name = rk_travel_events.2000.b

		add_character_flag = {
			flag = no_zanaris
			years = 10
		}
		
		ai_chance = {
			base = 100
			modifier = {
				OR = {
					has_trait = impatient
					has_trait = arrogant
				}
				add = 25
			}
			modifier = {
				OR = {
					has_trait = paranoid
					has_trait = craven
				}
				add = 50
			}
			
			ai_value_modifier = {
				ai_energy = -1
				ai_compassion = -1
			}
		}
	}
}

#return home
rk_travel_events.2002 = {
	hidden = yes
	scope = none

	immediate = {

		add_character_flag = {
			flag = no_zanaris
			years = 3
		}
		
		current_travel_plan ?= {
			reroute_to_home = yes
			if = {
				limit = { is_paused = yes }
				resume_travel_plan = yes 
			}
		}

		trigger_event = {
			id = rk_travel_events.2003
			days = 1
		}

	}

}

#Remove tree spirit and give victory reward
rk_travel_events.2003 = {
	hidden = yes

	immediate = {
		scope:fighter_mc_fighter_chap = {
			death = { death_reason = death_vanished }
		}

		scope:sc_victor = {
			send_interface_toast = {
				title = rk_travel_events.2003.fight.success
				left_icon = root
				create_artifact_rk_dramen_effect = { OWNER = this }
				#custom_tooltip = rk_travel_events.2005.b.diplo.success2
			}
		}
	}
}

# I foolishly cancelled my travel plan, the search for Zanaris is abandoned
rk_travel_events.2004 = {
	type = character_event
	title = rk_travel_events.2004.t
	desc = rk_travel_events.2004.desc
	theme = travel
	override_background = { reference = wilderness }
	left_portrait = {
		character = root
		animation = admiration
	}

	option = { # Dangit
		name = legend_spread_events.8001.a

		remove_character_flag = find_zanaris
		ai_chance = {
			base = 100
		}
	}
}

#Reached the island of Entrana, found tree (and spirit)
rk_travel_events.2005 = {
	type = character_event
	title = rk_travel_events.2005.t
	desc = rk_travel_events.2005.desc
	theme = travel

	left_portrait = {
		character = root
		animation = personality_rational
	}
	right_portrait = {
		character = scope:fighter_mc_fighter_chap
		animation = personality_zealous
	}

	immediate = {
		remove_character_flag = find_zanaris
		create_character = {
			location = title:c_entrana.holder.capital_province
			template = new_warrior_character
			name = "Dramen Tree Spirit"
			gender = female
			culture = culture:ghost
			dynasty = none
			faith = faith:guthix
			trait = undead_character
			save_scope_as = fighter_mc_fighter_chap
		}
	}

	option = {  # Fight the tree spirit
		name = rk_travel_events.2005.a

		custom_tooltip = rk_travel_events.2005.tt

		configure_start_single_combat_effect = {
			SC_INITIATOR = root
			SC_ATTACKER = root
			SC_DEFENDER = scope:fighter_mc_fighter_chap
			FATALITY = possible
			FIXED = no
			LOCALE = terrain_scope
			INVALIDATION_EVENT = single_combat.1006
			OUTPUT_EVENT = rk_travel_events.2002
		}

		ai_chance = {
			base = 100
		}
	}

	option = {  #dipoloacy check vs tree spirit 
		name = rk_travel_events.2005.b
		trigger = {
			OR = { 
				culture = culture:ghost
				culture = { 
					any_parent_culture = {
						this = culture:ghost
					}
				}
				any_character_artifact = { has_variable = talk_ghosts }
			}
		}

		duel = {
			skill = diplomacy
			target = scope:fighter_mc_fighter_chap
			# Victory!
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -49
				}
				min = 5
				desc = rk_travel_events.2005.b.diplo.success
				send_interface_toast = {
					title = rk_travel_events.2005.b.diplo.success
					left_icon = root
					create_artifact_rk_dramen_effect = { OWNER = this }
					#custom_tooltip = rk_travel_events.2005.b.diplo.success2
				}
			}
			# Defeat!
			50 = {
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
				min = 5
				desc = rk_travel_events.2005.b.diplo.failure
				send_interface_toast = {
					title = rk_travel_events.2005.b.diplo.failure
					left_icon = root
					custom_tooltip = rk_travel_events.2005.b.diplo.failure2
				}
			}
		}

		trigger_event = rk_travel_events.2002

		ai_chance = {
			base = 100
		}


	}

}
