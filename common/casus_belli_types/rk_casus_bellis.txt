# Undead invasion cb
undead_tribute_cb = {
	icon = make_tributary_cb
	group = subjugation
	ai_only_against_neighbors = yes
	
	attacker_score_from_occupation_scale = 150
	attacker_score_from_battles_scale = 150
	defender_score_from_battles_scale = 150
	
	allowed_for_character = {
		can_have_tributaries_trigger = yes
		is_landed = yes
		government_has_flag = government_is_undead
	}

	# Root is the title
	# scope:attacker is the attacker
	# scope:defender is the defender
	
	allowed_against_character = {
		scope:defender = {
			is_independent_ruler = yes
			is_landed = yes

			NOT = {	government_has_flag = cannot_be_vassal_or_liege	}
			
		}
		scope:attacker = {
			# For the AI to not create ugly Tributaries
			trigger_if = {
				limit = {
					is_ai = yes
				}
				trigger_if = {
					limit = {
						NOT = {
							government_has_flag = government_is_nomadic
						}
					}
					scope:defender.realm_size <= {
						value = scope:attacker.realm_size
						multiply = 0.75
					}
					scope:defender.primary_title.tier < tier_empire
				}
				OR = {
					scope:defender.primary_title.tier <= tier_duchy
					scope:defender.primary_title.tier <= scope:attacker.primary_title.tier
				}
			}
		}
	}
	allowed_against_character_display_regardless = {
		custom_tooltip = {
			text = must_neighbor_or_neighbor_tributary_tt
			scope:attacker = {
				any_land_neighboring_realm_with_tributaries_owner = {
					this = scope:defender
				}
			}
		}
	}

	should_invalidate = {
		OR = {
			scope:attacker = {
				OR = {
					is_independent_ruler = no
					is_landed = no
				}
			}
			scope:defender = {
				OR = {
					is_independent_ruler = no
					is_landed = no
				}
			}
		}
	}
	
	cost = { 
		prestige = {
			scope:defender = {
				value = {
					add = realm_size
					multiply = 25
					if = {
						limit = { primary_title.tier = tier_county }
						max = 100
					}
					else_if = {
						limit = { primary_title.tier = tier_duchy }
						max = 200
					}
					else = {
						max = 300
					}
					desc = CB_SIZE_OF_TARGET_REALM_COST
				}
			}
		}
	}

	on_declaration = {
		on_declared_war = yes
	}	
	
	on_invalidated_desc = msg_make_tributary_war_invalidated_message
	
	on_invalidated = {}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = make_tributary_cb_victory_desc_attacker
			}
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = make_tributary_cb_victory_desc_defender
			}
			desc = make_tributary_cb_victory_desc
		}
	}
	
	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }

		scope:attacker = {
			if = {
				limit = { government_has_flag = government_is_nomadic }
				custom_tooltip = make_tributary_temp_protection_tooltip
				hidden_effect = {
					set_variable = {
						name = temp_tributary_protection
						years = temp_tributary_protection_value
					}
				}
			}
		}
		
		if = { # This if/else exists for localization purposes, since it could be parsed before the war starts
			limit = { exists = root.war }
			start_tributary_from_war_effect = {
				TRIBUTARY = scope:defender
				SUZERAIN = scope:attacker
				WAR = root.war
			}
		}
		else = {
			save_scope_value_as = {
				name = high_obligations
				value = yes
			}
			start_tributary_interaction_effect = {
				TRIBUTARY = scope:defender
				SUZERAIN = scope:attacker
			}
		}

		#If you tributarize a confederate, they leave their confederation
		if = {
			limit = {
				scope:defender = {
					is_confederation_member = yes
				}
			}
			scope:defender.confederation = {
				remove_confederation_member = scope:defender
			}
		}
		
		# Prestige level progress for the attacker
		scope:attacker = {
			add_prestige_experience = {
				value = medium_prestige_value
			}
		}

		# Prestige loss for the defender
		scope:defender = {
			add_prestige = {
				value = medium_prestige_value
				multiply = -1.0
			}
			#If defender is not already undead, they get turned into undead 
			if = {
				limit = { 
					culture = {
						NOT = { has_cultural_pillar = heritage_undead } 
					}
				}
				add_trait = undead_character
				convert_family_culture_and_notify_vassals_effect = {
					CONVERTER = scope:attacker
					OLD_CULTURE = scope:defender.culture
					NEW_CULTURE = scope:attacker.culture
				}
			}
			#If not an undead government, they get turned into one
			if = {
				limit = { 
					NOT = { government_has_flag = government_is_undead }
				}
				change_government = undead_government
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker
			FAME_BASE = major_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}
		
		# Truce
		add_truce_attacker_victory_effect = yes


		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = make_tributary_cb_white_peace_desc_defender
			}
			desc = make_tributary_cb_white_peace_desc
		}
	}
	
	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }

		#EP2 accolade glory gain for doing ok against higher ranked enemy
		scope:defender = { accolade_defender_war_end_glory_gain_low_effect = yes }

		# Prestige loss for the attacker
		scope:attacker = {
			add_prestige = {
				value = minor_prestige_value
				multiply = -1.0
			}
			stress_impact = {
				ambitious = medium_stress_impact_gain
				arrogant = medium_stress_impact_gain
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker # Not important as the scales are identical
			FAME_BASE = minor_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}
		
		scope:defender = {
			stress_impact = {
				arrogant = medium_stress_impact_gain
			}
		}

		# Truce
		add_truce_white_peace_effect = yes

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = make_tributary_cb_white_peace_desc_defender
			}
			triggered_desc = {
				trigger = {
					scope:attacker = {
						is_local_player = yes
						has_targeting_faction = yes
					}
				}
				desc = make_tributary_cb_defeat_desc_attacker
			}
			desc = make_tributary_cb_white_peace_desc
		}
	}
	
	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }

		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:defender = { accolade_defender_war_end_glory_gain_med_effect = yes }
		
		# Prestige loss for the attacker
		scope:attacker = {
			add_prestige = {
				value = major_prestige_value
				multiply = -1.0
			}
		}

		# Prestige for the defender
		scope:defender = {
			add_prestige_war_defender_effect = {
				PRESTIGE_VALUE = medium_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:defender
			FAME_BASE = major_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}
		
		scope:attacker = {
			save_temporary_scope_as = loser
		}

		# Truce
		add_truce_attacker_defeat_effect = yes
		
		on_lost_aggression_war_discontent_loss = yes

		# EP3: note gold gained from military assistance/join war contracts and their war contribution threshold
		laamp_as_mercenary_payout_tooltip_effect = yes
	}
	
	on_primary_attacker_death = invalidate
	on_primary_defender_death = inherit
	
	attacker_allies_inherit = yes
	defender_allies_inherit = yes
	
	war_name = "UNDEAD_TRIBUTE_WAR_NAME"
	war_name_base = "UNDEAD_TRIBUTE_WAR_NAME_BASE"
	cb_name = "UNDEAD_TRIBUTE_CB_NAME"
	interface_priority = 59
	
	ticking_war_score_targets_entire_realm = yes
	max_defender_score_from_battles = 150
	max_attacker_score_from_battles = 150
	max_defender_score_from_occupation = 150
	max_attacker_score_from_occupation = 150
	attacker_ticking_warscore = 0
	attacker_wargoal_percentage = 0.8
	
	max_ai_diplo_distance_to_title = 500

	ai_score_mult = {
		value = 1

		if = {
			limit = {
				scope:defender.primary_title.tier >= scope:attacker.primary_title.tier
			}
			multiply = 0.1
		}

		multiply = struggle_wars_prioritise_struggle_targets_value
		
		if = {
			limit = {
				scope:attacker = { government_has_flag = government_is_nomadic }
				scope:attacker.domain_size < scope:attacker.domain_limit
			}
			multiply = 0.1
		}
	}

	ai_score = {
		value = {
			value = 50
			scope:defender = {
				every_sub_realm_county = {
					add = 50
				}
			}
			scope:attacker = {
				if = {
					limit = {
						government_has_flag = government_is_nomadic
						domain_size >= domain_limit
					}
					multiply = 5
				}
				else_if = {
					limit = {
						NOT = {
							government_has_flag = government_is_nomadic
						}
					}
					multiply = {
						value = 0.2
						if = {
							limit = {
								scope:defender.monthly_character_income >= 3
								scope:defender.monthly_character_income >= {
									add = scope:attacker.monthly_character_income
									multiply = 1.25
								}
							}
							add = 0.3
						}
					}
				}
			}
		}
	}
}