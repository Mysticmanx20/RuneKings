
goblin_village_scripted_effect = {
	
	
	create_title_and_vassal_change = {
		type = created
		save_scope_as = title_change
	}
	title:k_gobvil = {
		change_title_holder = {
			holder = scope:founder
			change = scope:title_change
		}
	}
	title:k_gobvil = { save_scope_as = new_title } 
	
	resolve_title_and_vassal_change = scope:title_change
	hidden_effect = { set_primary_title_to = title:k_gobvil }
	
	hidden_effect = {
		title:k_gobvil = { set_de_jure_liege_title = title:e_zaros }
	}
	
	# Make it your capital if it wasn't already.
	if = {
		limit = {
			NOR = { 
				capital_county = title:c_gobvilgreen 
				capital_county = title:c_gobvil
			}
		}
		set_realm_capital = title:c_gobvilgreen
	}
	# And convert it to your culture if it wasn't Goblin.
	if = {
		limit = {
			NOR = {
				title:c_gobvilgreen.culture = {
					culture = culture:goblin
				}
				title:c_gobvil.culture = {
					culture = culture:goblin
				}
			}
		}
		title:c_gobvilgreen = { set_county_culture = scope:founder.culture }
		title:c_gobvil = { set_county_culture = scope:founder.culture }
	}

	add_legitimacy = minor_legitimacy_gain

	trigger_event = major_decisions.1101
	
}

f2p_scripted_effect = {
	add_prestige = medium_prestige_gain
	add_piety = medium_piety_gain
	
	create_title_and_vassal_change = {
		type = created
		save_scope_as = title_change
	}
	title:e_free = {
		change_title_holder = {
			holder = scope:founder
			change = scope:title_change
		}
	}
	resolve_title_and_vassal_change = scope:title_change
	hidden_effect = { set_primary_title_to = title:e_free }
	

	add_legitimacy = major_legitimacy_gain
	
}

eastsea_scripted_effect = {
	add_prestige = medium_prestige_gain
	add_piety = medium_piety_gain
	
	create_title_and_vassal_change = {
		type = created
		save_scope_as = title_change
	}
	title:e_eastsea = {
		change_title_holder = {
			holder = scope:founder
			change = scope:title_change
		}
	}
	resolve_title_and_vassal_change = scope:title_change
	hidden_effect = { set_primary_title_to = title:e_eastsea }
	

	add_legitimacy = major_legitimacy_gain
	
}



##########################################################################################
#Scripted effects relating to Stealing Schemes

steal_gold_scheme_prep_effect = {
	save_scope_as = scheme
	save_scope_value_as = {
		name = follow_up_event
		value = event_id:scheme_critical_moments.1212
	}
	
	if = {
		limit = {
			NOT = { exists = scope:suppress_next_event }
		}
		scheme_owner = { trigger_event = scheme_critical_moments.0002 }
	}
}






#OLD STUFF

#Used in the immediate of the Scheme Owner's success event
steal_gold_success_effect = {

	#scheme owner gets the theif trait/secret for successful theft
	scope:owner = {
		if = {
			limit = {
				scope:target = {
					gold < medium_treasury_value
				}
			}
			add_gold = scope:target.gold
		}
		else = {
			add_gold = scope:target.medium_treasury_value
		}

		if = {
			limit = {
				exists = scope:scheme_discovered
			}
			scope:target = {
				add_opinion = {
					target = scope:owner
					modifier = stole_artifact_from_me
				}
			}
			if = {
				limit = {
					scope:owner = { NOT = { has_trait = gallowsbait } }
				}
				add_trait = gallowsbait
			}
		}

		# else = {
		# 	if = {
		# 		limit = {
		# 			scope:owner = {
		# 				NOT = { any_secret = { secret_type = secret_thief } }
		# 			}
		# 		}
		# 		hidden_effect = {
		# 			add_secret = {
		# 				type = secret_thief
		# 				target = scope:target
		# 			}
		# 		}
		# 	}
		# }
	}

	scope:target = {
		if = {
			limit = {
				gold < medium_treasury_value
			}
			remove_short_term_gold = gold
		}
		else = {
			remove_short_term_gold = medium_treasury_value
		}
		
	}
}


steal_gold_failure_effect = {

	scope:target = {	
		add_character_modifier = {
			modifier = watchful_modifier
			days = watchful_modifier_duration
		}
	}

	scope:owner = {
		if = {
			limit = {
				exists = scope:scheme_discovered
			}
			scope:target = {
				add_opinion = {
					target = scope:owner
					modifier = attempted_to_steal_artifact_from_me
				}
			}

		}
	}

}

