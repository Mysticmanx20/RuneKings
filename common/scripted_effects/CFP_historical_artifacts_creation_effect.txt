create_artifact_joyeuse_effect = { #overwrite vanilla one to set CFP model (1066 start)
	
	$OWNER$ = { save_scope_as = owner } # Get the character the artifact is being made for.
	set_artifact_rarity_illustrious = yes # Not really used, but if we don't set the scopes we get errors in the feature selection
	
	# Create the artifact
	create_artifact = {
		name = artifact_cfp_joyeuse_name
		description = artifact_joyeuse_description
		template = general_unique_template
		type = pedestal
		visuals = cfp_sword_joyeuse
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 800.12.25
			recipient = character:6392 #Karl I the Great
			location = province:2092 #Aachen
		}
		modifier = joyeuse_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}
	
	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		set_variable = joyeuse
		add_artifact_history = {
			type = inherited
			date = 814.1.2
			recipient = character:90095 #Louis I
		}
		add_artifact_history = {
			type = inherited
			date = 840.6.20
			recipient = character:30227 #Lothair I
		}
		add_artifact_history = {
			type = inherited
			date = 855.9.20
			recipient = character:144998 #Lothair II
		}
		add_artifact_title_history = {
			target = title:k_france
			date = 855.9.20
		}
		save_scope_as = epic
	}
	
}

create_artifact_cfp_bayeux_tapestry_effect = { 
	
	$OWNER$ = { save_scope_as = owner }
	$MAKER$ = { save_scope_as = maker }
	
	hidden_effect = {
		set_artifact_rarity_illustrious = yes
		
		scope:owner = {
			create_artifact = {
				name = artifact_cfp_bayeux_tapestry_name
				description = placeholder # Will be regenerated in the post-creation effects
				template = cfp_bayeux_tapestry_template
				type = book
				visuals = cfp_bayeux_tapestry
				wealth = scope:wealth
				quality = scope:quality
				creator = scope:maker
				modifier = cfp_bayeux_tapestry_modifier
				save_scope_as = newly_created_artifact
				decaying = no
			}
		}
		
		scope:newly_created_artifact = {
			set_artifact_description = artifact_cfp_bayeux_tapestry_description
			set_variable = { name = historical_unique_artifact value = yes }
			save_scope_as = epic
		}
	}
}

create_artifact_cfp_krum_skull_cup_effect = { 
	
	$OWNER$ = { save_scope_as = owner }
	$CREATOR$ = { save_scope_as = creator }
	$DESKULLED$ = { save_scope_as = killed }
	$LOCATION$ = { save_scope_as = location }
	
	set_artifact_rarity_famed = yes
	
	create_artifact = {
		name = artifact_cfp_krum_skull_cup_name
		description = artifact_cfp_krum_skull_cup_description
		template = general_unique_template
		type = pedestal
		visuals = cfp_trophy_skull_cup_01
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 750.1.1
			recipient = character:70497 # Nikephoros I
			location = province:760 #Tyana, c_cappadocia
		}
		modifier = cfp_krum_skull_cup_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}
	
	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		# set_variable = joyeuse
		add_artifact_title_history = {
			target = title:k_bulgaria
			date = 812.1.1
		}
		add_artifact_history = {
			type = conquest
			date = 811.7.26
			actor = character:70497 # Nikephoros I
			recipient = character:159123 # Krum of Bulgaria
			location = province:3689 #Preslav
		}
		
		save_scope_as = epic
	}
	
}

create_artifact_cfp_kure_skull_cup_effect = { 
	
	$OWNER$ = { save_scope_as = owner }
	$CREATOR$ = { save_scope_as = creator }
	$DESKULLED$ = { save_scope_as = killed }
	$LOCATION$ = { save_scope_as = location }
	
	set_artifact_rarity_famed = yes
	
	create_artifact = {
		name = artifact_cfp_kure_skull_cup_name
		description = artifact_cfp_kure_skull_cup_description
		template = general_unique_template
		type = pedestal
		visuals = cfp_trophy_skull_cup_01
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 942.1.2
			recipient = character:602 # Sviatoslav of Ruthenia
			location = province:547 #Kiev
		}
		modifier = cfp_kure_skull_cup_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}
	
	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		# set_variable = joyeuse
		add_artifact_title_history = {
			target = title:k_pechenegs
			date = 973.1.1
		}
		add_artifact_history = {
			type = conquest
			date = 972.1.2
			actor = character:602 # Sviatoslav of Ruthenia
			recipient = character:pecheneg000001 # Küre of Pechenegs
			location = province:1071 #river_dnieper
		}
		
		save_scope_as = epic
	}
	
}

create_artifact_rk_ghostspeak_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {	
		name = ghostspeak_name
		description = ghostspeak_desc
		template = rk_ghostspeak_template
		type = miscellaneous
		visuals = necklace
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 11620.10.29
			recipient = character:900101 #Urhney 
			location = province:3 #Lum Swamp
		}
		modifier = rk_ghostspeak
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		
	}
}

create_artifact_rk_kharidib_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {	
		name = kharidib_name
		description = kharidib_desc
		template = rk_kharidib_template
		type = pedestal
		visuals = reliquary
		wealth = scope:wealth
		quality = scope:quality
		history = {
			type = created
			date = 11620.10.29
			recipient = character:900800 #Emir Shah
			location = province:21 #Alkarid
		}
		modifier = artifact_monthly_piety_3_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		set_variable = { name = historical_unique_artifact value = yes }
		add_scaled_artifact_modifier_piety_effect = yes
		add_scaled_artifact_modifier_devotion_effect = yes
		add_scaled_artifact_modifier_grandeur_small_effect = yes
		set_variable = {
			name = relic
			value = flag:menaphite
		}
	}
}

create_artifact_rk_vbear_effect = {
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	$HUNTER$ = { save_scope_as = hunter }
	set_artifact_rarity_common = yes
	scope:owner = {
		set_variable = { name = animal_type value = $ANIMAL$ days = 5 }
		if = {
			limit = {
				OR = {
					NOT = { exists = var:animal_type }
					var:animal_type ?= flag:none
				}
			}
			random_list = {
				8 = {
					hunt_activity_standard_game_effect = { PROVINCE = scope:hunter.location HUNTER = scope:hunter }
				}
				2 = {
					hunt_activity_dangerous_game_effect = { PROVINCE = scope:hunter.location }
				}
			}
		}
	}
	if = {
		limit = { exists = scope:adventurer }
		scope:adventurer = { save_scope_as = creator }
	}
	else = {
		scope:hunter = { save_scope_as = creator }
	}
	hidden_effect_new_object = {
		# Get artifact quality, wealth, and materials
		animal_artifact_wealth_quality_effect = yes
		if = {
			limit = {
				OR = {
					hunt_hide_big_trigger = { VARIABLE = scope:owner.var:animal_type }
					AND = {
						exists = scope:animal_hide_size
						scope:animal_hide_size = flag:big
					}
				}
			}		
			if = {
				limit = {
					NOT = { exists = scope:animal_hide_size }
				}
				save_scope_value_as = { name = animal_hide_size value = flag:big }
			}				
			create_artifact = {	
				name = artifact_animal_hide_big_name
				creator = scope:creator
				description = placeholder
				visuals = large_animal_hide
				type = animal_hide_big
				modifier = artifact_placeholder_modifier
				wealth = scope:wealth
				quality = scope:quality
				history = {
					type = created
					date = 11619.1.1
					recipient = character:900106 #King Roald
					location = province:50 #Varrock Farmland
				}
				save_scope_as = newly_created_artifact
			}
			scope:newly_created_artifact = {
				# Set grandeur
				add_scaled_artifact_modifier_grandeur_big_effect = yes
				# Set prestige
				add_scaled_artifact_modifier_prestige_effect = yes
			}
		}
		scope:owner = {
			remove_variable = adventure_artifact_location
			remove_variable = adventure_artifact_hunter
		}
	}
}
