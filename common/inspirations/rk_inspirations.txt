
rk_cannon_inspiration = {
	gold = {
		value = 350

		# If we have a cultural tradition which makes funding certain types of Inspiration more expensive, add to the cost here.
		if = {
			limit = {
				# Must always have a inspiration owner to have cost modifiers.
				exists = scope:inspiration_owner

				# Local artisans charge a fixed fee so the cost matches up with the cost listed in the "Comission Artifact" decision.
				NOT = { 
					scope:inspiration_owner = {
						has_character_flag = local_artisan
					}
				}
			}

			# If the Inspiration Owner has a cultural tradition which makes funding certain types of Inspiration more expensive, add to the cost here.
			if = {
				limit = { scope:inspiration_owner = { culture = { has_cultural_parameter = more_expensive_weapon_inspiration } } }
				add = {
					value = basic_fund_inspiration_cost
					multiply = more_expensive_inspirations_multiplier_value
				}
			}

			# Modify the cost based on the Inspiration Owner's relevant skills
			multiply = {
				# Get the squared value of our inspiration skill's averages (0 = 0, 5 = 25, 10 = 100, 20 = 400)
				value = scope:inspiration_owner.weapon_inspiration_average_skill_value
				multiply = scope:inspiration_owner.weapon_inspiration_average_skill_value

				# Reduce by a factor of 100 to get the base cost multiplier (0 = 0, 5 = 0.25, 10 = 1.00, 20 = 2.00)
				multiply = 0.01

				# Additional modifier so it's easy to tweak overall cost.
				multiply = inspiration_cost_skill_multiplier

				# Min cost cannot drop beyond 50%
				min = 0.5
			}
		}
		
		# If you used the "Comission Artifact" decision and have a relevant estate buildling, you get a discount
		if = {
			limit = {
				exists = scope:inspiration_owner
				scope:inspiration_owner = {
					has_character_flag = local_artisan
				}
				liege.domicile ?= { has_domicile_parameter = estate_reduce_commission_artifact_cost } # We check liege specifically because scope:inspiration_sponsor does not exist yet
			}
			multiply = estate_reduce_commission_artifact_cost_value
		}
		round = yes
	}
	progress_chance = 75

	on_creation = {
		
	}

	is_valid = {
		
	}
	is_sponsor_valid = {
		ep1_is_sponsor_valid_inspiration_basic = yes
	}
	can_sponsor = {
		ep1_can_sponsor_inspiration_basic = yes
	}

	on_monthly = {
		# scope:inspiration_sponsor = {
		# 	trigger_event = {
		# 		on_action = inspiration_maintenance_events
		# 	}
		# 	trigger_event = {
		# 		on_action = inspiration_ongoing_events
		# 	}
		# }
	}
	on_complete = {
		scope:inspiration_owner = {
			set_variable = {
				name = created_artifact_for
				value = scope:inspiration_sponsor
			}
			set_variable = {
				name = created_artifact_type
				value = flag:weapon
			}
			grant_inspiration_reward_effect = yes
		}
		scope:inspiration_sponsor = { #To give the right flavor for the completion event
			add_character_flag = {
				flag = trigger_weapon_completion_event
				days = 1 
			}
			trigger_event = {
				id = cannon_inspiration.1011
				days = 1
			}
		}
	}
	on_sponsor = {
		scope:inspiration_owner = {
			# To ensure that some time has passed before the first event
			# This flag is set on the inspiration owner since the sponsor might be sponsoring multiple inspirations at once
			add_character_flag = {
				flag = fund_weapon_inspiration_event_cooldown
				days = 60
			}
		}
		scope:inspiration_sponsor = {
			trigger_event = {
				on_action = inspiration_start_events
			}
		}
	}
	on_owner_death = {
		save_scope_value_as = {
			name = weapon_inspiration
			value = yes
		}
		if = {
			limit = { exists = scope:inspiration_sponsor }
			scope:inspiration_sponsor = {
				trigger_event = {
					on_action = inspiration_invalidated_events
				}
			}
		}
	}
	on_sponsor_invalidated = {
		save_scope_value_as = {
			name = weapon_inspiration
			value = yes
		}
		if = {
			limit = { exists = scope:inspiration_sponsor }
			scope:inspiration_sponsor = {
				trigger_event = {
					on_action = inspiration_invalidated_events
				}
			}
		}
	}
}